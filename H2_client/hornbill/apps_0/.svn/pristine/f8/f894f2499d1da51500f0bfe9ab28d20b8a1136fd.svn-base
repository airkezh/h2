/*common*/
/*
 var io = require('app/im/io')
 //Meilishuo.config.im_url = 'ws://192.168.128.11:3090/'
 Meilishuo.config.im_url = 'ws://xhimserver.meilishuo.com/'
 */

var socket = io.connect(Meilishuo.config.im_url);

//window.socket = socket

var uploadPic = require('app/im/uploadPic')
    , shareTmp = require('component/shareTmp')
    , init = require('app/im/init')
    , ioStatus = require('app/im/ioStatus')
    , pc = require('app/im/pc')
    , smile = require('app/im/smile')
    , reply = require('app/im/reply')
    , intro = require('app/im/intro')
    , black = require('app/im/black')
    , info = require('app/im/info')
    , userList = require('app/im/userList')
    , userListHistory = require('app/im/userListHistory')
    , userStatus = require('app/im/userStatus')
    , transfer = require('app/im/transfer')
    , changeTab = require('app/im/changeTab')
    , audio = require('component/audio')
    , client = require('app/im/client')
    //, message = require('app/im/message')
    , message = require('app/im/messageObj')

    , $imTab = $('#im_tab')
    , $mainBox = $('#im_main')
    , $userTab = $('#user_tab')
    , $userListNowBox = $('#list_now')


    , sound = {};

//require(['jquery','app/datetimepicker']);

window.userListObj = {};
var Config = {
    URL: {
        getGoods: "http://v.higo.meilishuo.com/goods/get_group_goods",
        coupon: {
            pri: "http://v.higo.meilishuo.com/shop_coupon/couponList4Pri",
            pub: "http://v.higo.meilishuo.com/shop_coupon/couponList4Pri"
        }
    },
    //token: "747fa55391b1dcaa06923f93d7561906",
    token: "fff93ef5bd6c9ee74d9f65b1255b697e",
    shop_id: "151940596501054964",
    toid: 0,
    isGroup: 0, //0: 私聊   1: 群聊
    type: 0     //0: 商品   1: 优惠卷
};

if(fml.vars.im.imClient){
    client.init()
    sound.newMsg = ($(shareTmp('im_sound_client')).appendTo($('body')))[0]
    sound.newOrder = ($(shareTmp('im_sound_client_order')).appendTo($('body')))[0]

}else{
    sound.newMsg = audio.init(Meilishuo.config.picture_url+ 'images/wap/web/im/mlsim_sound2.mp3', {tag:'newMsg'})
    sound.newOrder = audio.init(Meilishuo.config.picture_url+ 'images/wap/web/im/mlsim_order.mp3',{tag:'newOrder'})
}

smile.init('#im_main' , '.smile');
changeTab('#im_left', '#user', 200)
changeTab('#im_main', '.intro')

window.changeUser = function(toid, opt){
    if(!toid) return;
    if(!userListObj[toid]) return;

    var opts = opt || {}
    _changeUser(toid)



    if(socket.disconnected) return;

    if(userListObj[toid].num){
        fml.vars.im.nosound = 1
    }

    //update order
    if(!userListObj[toid].welcome && fml.vars.im.isShop){
        $.get('/www/aj/recent_order', {to:toid} , function(res) {
            if(res.code===0){
                // console.log(res)
                userListObj[toid].mainBox.find('.list_order')
                    .prepend($(shareTmp('im_order_item',{list : res.data.datas || []})))
            }
        },'json');
    }

    userListObj[toid].mainBox.find('.im_inputbox_input').focus()

    var data = {
        toid : toid
        , welcomed : userListObj[toid].welcome | 0
        , toType : userListObj[toid].utype
    }
    opts.history && (data.history = opts.history)
    opts.sync && (data.sync = opts.sync)
    if(!opts.sync)
        socket.emit('changeUser', data)
    if(userListObj[toid].num){
        userListObj[toid].num = 0
        userList.topDialog(toid, 'read')
    }
    /*更改地址栏url*/
    /*if(window.history.replaceState){
     window.history.replaceState({},'change user',location.pathname+'?toid='+toid)
     }*/
    var num = $("#list_now").find("[uid='"+toid+"'] .num").html();
    $("#list_now").find("[uid='"+toid+"'] .num").empty().hide();
    num = num ? parseInt(num, 10) : 0;
    var total = $("#user_tab").find(".tab_now .unread_tip").html();
    total = total ? parseInt(total, 10) : 0;
    $("#user_tab").find(".tab_now .unread_tip").html(total-num).hide();
}

var pageState = {};
var Api = function(obj){
    $.ajax({
        url: obj.url,
        dataType: 'jsonp',
        data: obj.params,
        jsonp:'callback',
        success: obj.success,
        error: obj.error
    });
};

function _changeUser(toid){
    fml.vars.im.toid = toid
    userListObj[toid].userList.addClass('act').siblings().removeClass('act')
    userListObj[toid].mainBox.addClass('act').siblings().removeClass('act')
}

var submit = function(){
    var $form = $(this)
    var $message = $form.find('.im_inputbox_input')
        , $picbox = $form.find('.im_inputbox_picbox')
        , $dialogBox = $form.parents('.im_mainbox').find('.im_dialog')
        , toid = $dialogBox.attr('uid')

    if(socket.disconnected){
        info.info(userListObj[toid].mainBox, '您已经处于离线状态，无法发送消息，请上线后再次尝试。', 'offline')
        return;
    }

    var msg = $.trim($message.html())
        , $pics = $picbox.children('li')
        , len = $pics.length
        , black = (userListObj[toid].black) | 0
        , $pic

    if(black){
        info.info(userListObj[toid].mainBox, '发起会话请先移除黑名单')
        return;
    }

    //for firefox
    if(msg==='<br>'){
        msg=''
        $message.html('')
    }

    if(msg){
        var $msg = message.send({
            type : 'text'
            , content : msg
            , black : black
            , dialogBox : $dialogBox
        })
        $message.html('').focus()
    }

    if(len){
        for(var i = 0; i < len; i++){
            $pic = $($pics[i])

            uploadPic.send($dialogBox, message.send, {
                'pic_id' : $pic.attr('pic_id')
                , 'pic_url' : $pic.attr('pic_url')
                , 'o_pic_url' : $pic.children('a').attr('href')
            })

        }
        $picbox.html('')
        userListObj[toid].upLoadPicNum = 0
        $form.removeClass('havePic')
    }

    if(msg || len)
        userList.topDialog(toid, 'read')

}

$mainBox
    .on('click', '.fail', message.resend)
    .on('click', '.historyBtn', function(){
        var $this = $(this)
            , toid = $this.attr('toid')

        if($this.is('.eventnone')) return;

        $this.addClass('eventnone').text('加载中...')
        console.log($this)
        var utype = userListObj[toid].utype
        var ajUrl = utype==='public' ? '/www/aj/publicHistory' : '/www/aj/history'
        $.get(ajUrl, {
            msg_id : userListObj[toid].history || 0
            , limit : 10
            , to : toid
            , source: fml.vars.im.source

        }, function(res){
            message.history(res, toid)
            $this.removeClass('eventnone').text('查看历史聊天记录')

        }, 'json')
            .fail(function(){
                $this.removeClass('eventnone').text('加载失败，请重试')

            })
    })
    .on('click', '.d_u a', function(){
        fml.vars.im.mustleave = 1
    })
    .on('submit', '.im_inputbox form', submit)
    .on('submit', '.order_box form', intro.searchOrder)

    .on('mouseenter', '.im_inputbox_picbox li', function(){
        $(this).children('.cleanPicBtn').show()
    })
    .on('mouseleave','.im_inputbox_picbox li', function(){
        $(this).children('.cleanPicBtn').hide()
    })
    .on('click', '.im_inputbox .goodsBtn', function(){
        Config.type = 0;
        var url = Config.URL.getGoods;
        Api({
            url: url,
            params: {
                access_token: Config.token,
                shop_id: Config.shop_id,
                type: 1,
                size: 6,
                p: 1
            },
            success: function(resp){
                console.log('success', resp);
                var list = (resp.data && resp.data.list) ? resp.data.list : [];
                var total = (resp.data && resp.data.total) ? resp.data.total : 0;
                var goodsPanel = shareTmp('goods_panel', {title:"发送商品", list: list, noInfo:"暂无商品信息", isCoupon:false});
                $('body').append(goodsPanel);
                pageState.total = parseInt(total, 10);
                var $table = shareTmp('panel_goods_table', {list: list});
                if(list.length){
                    $('.panelBody').prepend($table);
                }

            }
        });
    })
    .on('click', '.im_inputbox .couponBtn', function(){
        Config.type = 1;
        var url = Config.isGroup ? Config.URL.coupon.pub : Config.URL.coupon.pri;
        Api({
            url: url,
            params: {
                access_token: Config.token,
                qry_batch_status: "20",
                type: 1,
                size: 6,
                p: 1
            },
            success: function(resp){
                console.log('success', resp);
                var list = (resp.data && resp.data.list) ? resp.data.list : [];
                var total = (resp.data && resp.data.total) ? resp.data.total : 0;
                var goodsPanel = shareTmp('goods_panel', {title:"发送优惠卷", list: list, noInfo:"暂无优惠卷信息", isCoupon:true, isGroup:Config.isGroup});
                $('body').append(goodsPanel);
                pageState.total = parseInt(total, 10);
                var $table = shareTmp('panel_coupon_table', {list: list});
                if(list.length){
                    $('.panelBody').prepend($table);
                }
            }
        });
    })
    .on('click', '.cleanPicBtn', function(e){
        e.stopPropagation()
        $(this).parent('li').fadeOut(100, function(){
            var $this = $(this)
                , $form = $this.parents('form')
                , uid = $form.attr('uid')

            userListObj[uid].upLoadPicNum--
            if(userListObj[uid].upLoadPicNum == 0)
                $form.removeClass('havePic')

            $form.find('.im_inputbox_input').focus()
            $this.remove()
        })
    })

$userListNowBox
    .on('mouseenter', '.user_info', function(){
        $(this).children('.closeBtn').show()
    })
    .on('mouseleave','.user_info', function(){
        $(this).children('.closeBtn').hide()
    })
    .on('click', '.closeBtn', function(e){
        e.stopPropagation()
        var uid = $(this).parent('.user_info').attr('uid')
        userList.closeDialog(uid)

    })
    .on('click', '.user_info', function(){
        changeUser($(this).attr('uid'))
    })

$('body')
    .on("click", "tr", function(){
        if($(this).closest("thead").length) return;
        $("tr").find("td").removeClass("trActive");
        $(this).find("td").addClass("trActive");
    })
    .on("click", "#closePanelBtn", function(){
        $(".goodsPanelBack").remove();
        $(".goodsPanel").remove();
        pageState = {};
    })
    .on("click", "#sendPanelBtn", function(){
        //发送商品的接口
    })
    .on("click", ".searchBtn1", function(){
        pageState.keyword = $("#searchInput").val();
        if(Config.type){    //优惠卷
            if(Config.isGroup){     //群聊
                var url = Config.URL.coupon.pub;
            } else {        //私聊
                var url = Config.URL.coupon.pri;
            }
        } else {    //商品
            var url = Config.URL.getGoods;
        }
        Api({
            url: url,
            params: {
                access_token: Config.token,
                shop_id: Config.shop_id,
                qry_batch_status: "20",
                type: 1,
                size: 6,
                p: 1,
                keyword: pageState.keyword
            },
            success: function(resp) {
                console.log(resp);
                var total = (resp.data && resp.data.total) ? resp.data.total : 0;
                pageState.total = parseInt(total, 10);
                var list = (resp.data && resp.data.list) ? resp.data.list : [];
                $('tbody').empty();
                var tbody = shareTmp(Config.type?'panel_coupon_body':'panel_table_body', {list: list});
                $('tbody').html(tbody);
            }
        });
    })
    .on("click", "#prevPage", function(){
        var p = pageState.page || 1;
        p = (p - 1) < 1 ? 1 : (p - 1);
        pageState.page = p;
        $("#pageNum").html(p);
        if(Config.type){    //优惠卷
            if(Config.isGroup){     //群聊
                var url = Config.URL.coupon.pub;
            } else {        //私聊
                var url = Config.URL.coupon.pri;
            }
        } else {    //商品
            var url = Config.URL.getGoods;
        }
        Api({
            url: url,
            params: {
                access_token: Config.token,
                shop_id: Config.shop_id,
                qry_batch_status: "20",
                type: 1,
                size: 6,
                p: p,
                keyword: pageState.keyword
            },
            success: function(resp) {
                console.log(resp);
                var list = (resp.data && resp.data.list) ? resp.data.list : [];
                $('tbody').empty();
                var tbody = shareTmp(Config.type?'panel_coupon_body':'panel_table_body', {list: list});
                $('tbody').html(tbody);
            }
        });
    })
    .on("click", "#nextPage", function(){
        var p = pageState.page || 1;
        p = (p + 1) >= Math.ceil(pageState.total / 6) ? Math.ceil(pageState.total / 6) : (p + 1);
        pageState.page = p;
        $("#pageNum").html(p);
        if(Config.type){    //优惠卷
            if(Config.isGroup){     //群聊
                var url = Config.URL.coupon.pub;
            } else {        //私聊
                var url = Config.URL.coupon.pri;
            }
        } else {    //商品
            var url = Config.URL.getGoods;
        }
        Api({
            url: url,
            params: {
                access_token: Config.token,
                shop_id: Config.shop_id,
                qry_batch_status: "20",
                type: 1,
                size: 6,
                p: p,
                keyword: pageState.keyword
            },
            success: function(resp) {
                console.log(resp);
                var list = (resp.data && resp.data.list) ? resp.data.list : [];
                $('tbody').empty();
                var tbody = shareTmp(Config.type?'panel_coupon_body':'panel_table_body', {list: list});
                $('tbody').html(tbody);
            }
        });
    })
    .on("click", ".createCouponBtn", function(){
        var $createCoupon = shareTmp('createCoupon', {title: "创建优惠卷"});
        $('.goodsPanel').html($createCoupon);
        $('#couponStartDate').datetimepicker({
            lang:'ch',
            datepicker:true,
            timepicker:false,
            format:'Y-m-d',
        });
        $('#couponEndDate').datetimepicker({
            lang:'ch',
            datepicker:true,
            timepicker:false,
            format:'Y-m-d',
            onShow:function( ct ){
                this.setOptions({
                    minDate:$('#couponStartDate').val()?$('#couponStartDate').val():false
                })
            }
        });
    })
    .on("click", "#sendCreateCouponBtn", function(){
        //发送优惠卷的接口
    });



init(socket)
ioStatus(socket, $('#io_status'))
pc.init(socket)
intro.init(socket)
userStatus.init(socket, $imTab, $mainBox)
userList.init({
    mainBox : $mainBox
    , listBox : $userListNowBox
    , listTab : $userTab.children('.tab_now')
    , sound : sound
    , socket : socket
})

var messageFn = function(v){
//	if(userListObj[uid].num == v.msg_num) return;
    if(!fml.vars.im.imClient) return;
    client.notify({
        "title":userListObj[v.uid].name
        ,"text":v.msg
        ,"uid":v.uid
        ,'img':userListObj[v.uid].avatar
    })
}

socket.on('unReadMsgPush', function(data){
    console.log('unReadMsgPush', data);
    if(data.data && data.data[0] && Config.toid == data.data[0].chatfrom){  //当前聊天人
        var s = fml.vars.im.toid==data.data[0].chatfrom ? sound : null;
        message.messageList(data, data.data[0].chatfrom, s, function(v){
            messageFn(v)
            userList.topDialog(v.uid,'read')
        });
    } else {    //非当前聊天人
        var chatfrom = data.data[0].chatfrom;
        var $unread = $("#list_now").find("[uid='" + chatfrom + "']");
        if(!$unread.length){
            $.post('/www/aj/user_info_by_id', {
                user_ids: chatfrom,
                fields: ""
            }, function(res){
                console.log(res);
                if(res.data && res.data.length){
                    var $user = shareTmp('user_info_panel', {data: res.data[0]});
                    $("#list_now").prepend($user);
                    $($user).find(".num").html(1);
                    var $unread_tip = $("#user_tab").find("li .unread_tip");
                    var total = $unread_tip.html();
                    total = total ? parseInt(total, 10) : 0;
                    $unread_tip.html(total+1).show();
                }
            }, 'json');
        } else {
            var num = $unread.find(".num").html();
            num = num ? parseInt(num, 10) : 0;
            $unread.find(".num").html(num+1).show();
            var $unread_tip = $("#user_tab").find("li .unread_tip");
            var total = $unread_tip.html();
            total = total ? parseInt(total, 10) : 0;
            $unread_tip.html(total+1).show();
        }

    }
});

userListHistory.init({box:'list_history', data:{page:1}, url:'/www/aj/historyUser'})
userListHistory.init({box:'list_public'})

socket.on('connectPush', function (data) {

    if(fml.vars.im.fromid != data.fromid){
        pc.backLogin()
        return;
    }

    userList.talkList()

    if(socket.io.connected > 1){
        return;
    }

    $('#im_layout').hide()

    $imTab.find('.user_img').html('<img src="' + fml.vars.im.head + '"/>')

    userList.topDialog(fml.vars.im.toid, 'auto', true)

    if(data.req.data.isShop){

        $('#im_body').removeClass('user_model').addClass('shop_model')

        transfer.init('#im_main', '.im_transfer', fml.vars.im.transfer)

        reply.init('.fastReply', fml.vars.im.udr, socket)

        black.init($mainBox)

    }

})

socket.on('ImMsgSysPush', function (data) {
    console.log('ImMsgSysPush', data);

    var fn = (new Function('return ' + data.fn))()
    fn()

})

socket.on('changeUserPush', function (data) {
    console.log('changeUserPush', data)
    var toid = data.toid
    Config.toid = toid;
    if(!toid) return;
    if(!userListObj[toid]) return;

    if(data.userStatus && data.userStatus.data){
        userStatus.update(data.userStatus.data, toid)
    }

    if(data.goods && data.goods.data){
        intro.update(data.goods.data, toid, 'goods')
    }

    message.changeUserPush(data, sound, messageFn)

    if(data.shop && data.shop.data){
        intro.update(data.shop.data, toid, 'shop')
    }
    if(data.black){
        black.set(data.black.data, toid)
    }
})

socket.on('talkListPush', function (data) {
    console.log('talkListPush', data)

    /*	if(!data.req) return;

     userList.talkList(data.req)*/
})

window.onbeforeunload = function (e) {
    if(fml.vars.im.imClient || !fml.vars.im.isShop)
        return;

    if(fml.vars.im.mustleave){
        fml.vars.im.mustleave = 0
        return;
    }

    e = e || window.event;
    var txt = "关闭浏览器将不能及时的收到新消息和声音提醒。"
    // 兼容IE8和Firefox 4之前的版本
    if (e) {
        e.returnValue = txt
    }

    // Chrome, Safari, Firefox 4+, Opera 12+ , IE 9+
    return txt
};

//socket.on('talkListNewPush',function(data){
//    console.log('talkListNewPush',data)
//    if(!data.req) return
//    userList.talkList(data.req)
//
//})
socket.on('sendSyncPush',function(res){
    console.log('sendSyncPush',res)

    var toid=res.toid
        ,$imDialog = $('.im_dialog[uid='+toid+']')
    if($imDialog.length==0) return

    for (var i = 0; i < res.data.length; i++) {
        var data = res.data[i]
        if($('#mid_'+data.messageId).length) continue
        if($('#mid_'+data.msg_id).length) continue
        var sendData = {
            data:[data]
            ,uid:toid
        }
        message.syncSend(sendData)
    }
})

function importCss(file){
    var head  = document.getElementsByTagName('head')[0];
    var link  = document.createElement('link');
    link.rel  = 'stylesheet';
    link.type = 'text/css';
    link.href = file+'?t=1210' //+ (new Date).getTime()
    head.appendChild(link);
}
function importJS(file , cbk){
    var head  = document.getElementsByTagName('head')[0];
    var link  = document.createElement('script');
    link.src = file +'?t=1030'
    link.onload = link.onreadystatechange = function() {
        if (!cbk) return
        var state = this.readyState;
        if (!state || 'loaded' == state || 'complete' == state) {
            cbk();
            head.removeChild(link)
        }
    }
    head.appendChild(link)
}
importCss('http://b.higo.meilishuo.com/statics/css/datetimepicker.css');
importJS('http://b.higo.meilishuo.com/statics/js/jquery.ui.timeslider.js');

socket.on('syncStatusPush',function(data){
    console.log('syncStatusPush',data)
})