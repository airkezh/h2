function Login(opts, passport){
	var mSelf = this
	this.opts = opts
	this.passport = passport || new Passport(opts)
	opts.watch && this.passport.bridge.addWatch(opts.watch)

	this.dom = {}

	this.setRefer()

	this.checkLogin(function(res){

		mSelf.initDom()
		mSelf.initInput()
		mSelf.setValidate(function(){mSelf.doLogin()});
	})
}

Login.prototype.initDom = function(){
	var passport = this.passport

	this.ui = $.extend({},{
			usernamePlaceholder:'邮箱/手机号/昵称'
			,passwordPlaceholder:'密码'
		},this.opts.ui)

	var tpl = require('login.html')
	this.dom.outer = $(this.opts.outer || '#loginBox').html(passport.shareTmp(tpl, this.ui))
	this.dom.msgArea = this.dom.outer.find('.passport-form-message')
}

Login.prototype.initInput = function(){
	var inputList = ['username','password','remember']

	for(var i in inputList){
		var inputname = inputList[i]
		this.dom[inputname] = this.dom.outer.find('#'+inputname)
	}
}

//表单操作
Login.prototype.setValidate = function(cbk){
	var passport = this.passport
	var validate = passport.getValidate()

	var validateRules = {
		'username' : {},
		'password' : {}
	}

	validateRules.username['req=' + this.ui.usernamePlaceholder] = '请输入您的用户名或注册邮箱'
	validateRules.password['req=' + this.ui.passwordPlaceholder] = '请输入密码'
	validateRules.password['minlen=' + 6] = '输入密码需在6位到32位间'
	validateRules.password['maxlen=' + 32] = '输入密码需在6位到32位间'

	if(validate){
		validate.addValidate(validateRules)
		return;
	}

	var formName = 'loginForm'
	var showStyle = {
		'showmsgbyline=msg_error' : '',
		'showmsgforsubmit=passport-form-submit' : cbk
	}
	var opts = {
		'success' : 'span=msg_ok',
		'error': 'span=msg_err'
	}

	passport.setValidate(formName, validateRules, showStyle, opts)

}

Login.prototype.checkLogin = function(cbk){
	var passport = this.passport
	passport.bridge.ajax('/init', {app_id:this.passport.app_id} , function(res){
		switch(res.error_code){
			case 0:
				break;
			case 10001:
				break;
			default:
				break;
		}

		cbk(res)		
	});
}

Login.prototype.doLogin = function (){
	var mSelf = this
	var passport = this.passport
	var data = {
		'username' : mSelf.dom.username.val(),
		'password' : mSelf.dom.password.val(),
		'remember' : mSelf.dom.remember[0].checked ? 1 : 0,
		'redirect' : passport.urlHandle.getParams(location.href).redirect, 
		'nt': Meilishuo.config.nt
	};

	var callback = function(res){
		switch(res.error_code){
			case 1004 : 
				if(!mSelf.risk){
					mSelf.risk = passport.setRisk({ui:{simple:1,type:'pic'}})
				}

				mSelf.risk.updateCaptcha()

				break;
			default :
				break;
		}

	};
	passport.bridge.ajax('/login', data , callback)
}

Login.prototype.showErrMsg = function(msg,notChange){
	this.dom.msgArea.html(msg).show()
};

Login.prototype.setRefer = function(){
	var passport = this.passport
	passport.storage.setCookie('LOGON_FROM' ,  document.referrer);
}
